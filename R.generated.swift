//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var string: string { .init(bundle: bundle, preferredLanguages: nil, locale: nil) }
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var info: info { .init(bundle: bundle) }

  func string(bundle: Foundation.Bundle) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: nil)
  }
  func string(locale: Foundation.Locale) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: locale)
  }
  func string(preferredLanguages: [String], locale: Locale? = nil) -> string {
    .init(bundle: bundle, preferredLanguages: preferredLanguages, locale: locale)
  }
  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func info(bundle: Foundation.Bundle) -> info {
    .init(bundle: bundle)
  }
  func validate() throws {

  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.string` struct is generated, and contains static references to 1 localization tables.
  struct string {
    let bundle: Foundation.Bundle
    let preferredLanguages: [String]?
    let locale: Locale?
    var localizable: localizable { .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale)) }

    func localizable(preferredLanguages: [String]) -> localizable {
      .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale))
    }


    /// This `_R.string.localizable` struct is generated, and contains static references to 59 localization keys.
    struct localizable {
      let source: RswiftResources.StringResource.Source

      /// Value: About book
      ///
      /// Key: aboutBook
      var aboutBook: RswiftResources.StringResource { .init(key: "aboutBook", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Add a book
      ///
      /// Key: addBook
      var addBook: RswiftResources.StringResource { .init(key: "addBook", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Add a favorite book
      ///
      /// Key: addFavoriteBook
      var addFavoriteBook: RswiftResources.StringResource { .init(key: "addFavoriteBook", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Author
      ///
      /// Key: author
      var author: RswiftResources.StringResource { .init(key: "author", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Favorite author
      ///
      /// Key: authorStat
      var authorStat: RswiftResources.StringResource { .init(key: "authorStat", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Back
      ///
      /// Key: back
      var back: RswiftResources.StringResource { .init(key: "back", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Beginning
      ///
      /// Key: beginning
      var beginning: RswiftResources.StringResource { .init(key: "beginning", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Book
      ///
      /// Key: book
      var book: RswiftResources.StringResource { .init(key: "book", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Book title
      ///
      /// Key: bookTitle
      var bookTitle: RswiftResources.StringResource { .init(key: "bookTitle", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Books
      ///
      /// Key: books
      var books: RswiftResources.StringResource { .init(key: "books", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Number of books read per year
      ///
      /// Key: booksYear
      var booksYear: RswiftResources.StringResource { .init(key: "booksYear", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Cancel
      ///
      /// Key: cancel
      var cancel: RswiftResources.StringResource { .init(key: "cancel", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Close
      ///
      /// Key: close
      var close: RswiftResources.StringResource { .init(key: "close", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Delete
      ///
      /// Key: delete
      var delete: RswiftResources.StringResource { .init(key: "delete", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Do you really want to delete the book?
      ///
      /// Key: deleteBook
      var deleteBook: RswiftResources.StringResource { .init(key: "deleteBook", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Download the book to the app
      ///
      /// Key: downloadBook
      var downloadBook: RswiftResources.StringResource { .init(key: "downloadBook", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Edit
      ///
      /// Key: edit
      var edit: RswiftResources.StringResource { .init(key: "edit", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Favorite language
      ///
      /// Key: favLanguage
      var favLanguage: RswiftResources.StringResource { .init(key: "favLanguage", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Favorite books
      ///
      /// Key: favoriteBooks
      var favoriteBooks: RswiftResources.StringResource { .init(key: "favoriteBooks", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Favorite genres
      ///
      /// Key: favoriteGenres
      var favoriteGenres: RswiftResources.StringResource { .init(key: "favoriteGenres", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Favourites
      ///
      /// Key: favourites
      var favourites: RswiftResources.StringResource { .init(key: "favourites", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Feedback
      ///
      /// Key: feedback
      var feedback: RswiftResources.StringResource { .init(key: "feedback", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Finished
      ///
      /// Key: finished
      var finished: RswiftResources.StringResource { .init(key: "finished", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Genres
      ///
      /// Key: genre
      var genre: RswiftResources.StringResource { .init(key: "genre", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Favorite genre
      ///
      /// Key: genreStat
      var genreStat: RswiftResources.StringResource { .init(key: "genreStat", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Genres
      ///
      /// Key: genres
      var genres: RswiftResources.StringResource { .init(key: "genres", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Half
      ///
      /// Key: half
      var half: RswiftResources.StringResource { .init(key: "half", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: For the last month
      ///
      /// Key: lastMonth
      var lastMonth: RswiftResources.StringResource { .init(key: "lastMonth", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: For the last year
      ///
      /// Key: lastYear
      var lastYear: RswiftResources.StringResource { .init(key: "lastYear", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Name
      ///
      /// Key: name
      var name: RswiftResources.StringResource { .init(key: "name", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: New favorite book
      ///
      /// Key: newFavoriteBook
      var newFavoriteBook: RswiftResources.StringResource { .init(key: "newFavoriteBook", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Next
      ///
      /// Key: next
      var next: RswiftResources.StringResource { .init(key: "next", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: No data
      ///
      /// Key: noData
      var noData: RswiftResources.StringResource { .init(key: "noData", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Note
      ///
      /// Key: note
      var note: RswiftResources.StringResource { .init(key: "note", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Number of books per month
      ///
      /// Key: numberBooks
      var numberBooks: RswiftResources.StringResource { .init(key: "numberBooks", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Number of pages read
      ///
      /// Key: numberPages
      var numberPages: RswiftResources.StringResource { .init(key: "numberPages", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Number of pages read per year
      ///
      /// Key: pagesYear
      var pagesYear: RswiftResources.StringResource { .init(key: "pagesYear", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Proccess
      ///
      /// Key: proccess
      var proccess: RswiftResources.StringResource { .init(key: "proccess", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Profile
      ///
      /// Key: profile
      var profile: RswiftResources.StringResource { .init(key: "profile", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Rate app
      ///
      /// Key: rateApp
      var rateApp: RswiftResources.StringResource { .init(key: "rateApp", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Rating
      ///
      /// Key: rating
      var rating: RswiftResources.StringResource { .init(key: "rating", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Read
      ///
      /// Key: read
      var read: RswiftResources.StringResource { .init(key: "read", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Reading
      ///
      /// Key: reading
      var reading: RswiftResources.StringResource { .init(key: "reading", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Reading frequency
      ///
      /// Key: readingStat
      var readingStat: RswiftResources.StringResource { .init(key: "readingStat", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Remove
      ///
      /// Key: remove
      var remove: RswiftResources.StringResource { .init(key: "remove", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Save
      ///
      /// Key: save
      var save: RswiftResources.StringResource { .init(key: "save", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Select genres
      ///
      /// Key: selectGenres
      var selectGenres: RswiftResources.StringResource { .init(key: "selectGenres", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Settings
      ///
      /// Key: settings
      var settings: RswiftResources.StringResource { .init(key: "settings", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Share app
      ///
      /// Key: shareApp
      var shareApp: RswiftResources.StringResource { .init(key: "shareApp", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Favorite author
      ///
      /// Key: statAuthor
      var statAuthor: RswiftResources.StringResource { .init(key: "statAuthor", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Favorite genre
      ///
      /// Key: statGenre
      var statGenre: RswiftResources.StringResource { .init(key: "statGenre", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Reading frequency
      ///
      /// Key: statReading
      var statReading: RswiftResources.StringResource { .init(key: "statReading", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Amount of time
      ///
      /// Key: statTime
      var statTime: RswiftResources.StringResource { .init(key: "statTime", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Statistics
      ///
      /// Key: statistics
      var statistics: RswiftResources.StringResource { .init(key: "statistics", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Amount of time
      ///
      /// Key: timeStat
      var timeStat: RswiftResources.StringResource { .init(key: "timeStat", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Track your progress
      ///
      /// Key: trackProgress
      var trackProgress: RswiftResources.StringResource { .init(key: "trackProgress", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Usage Policy
      ///
      /// Key: usagePolicy
      var usagePolicy: RswiftResources.StringResource { .init(key: "usagePolicy", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Your name
      ///
      /// Key: yourName
      var yourName: RswiftResources.StringResource { .init(key: "yourName", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// Value: Your photo
      ///
      /// Key: yourPhoto
      var yourPhoto: RswiftResources.StringResource { .init(key: "yourPhoto", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }
    }
  }

  /// This `_R.color` struct is generated, and contains static references to 1 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 30 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `books_books_icon`.
    var books_books_icon: RswiftResources.ImageResource { .init(name: "books_books_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `books_pages_icon`.
    var books_pages_icon: RswiftResources.ImageResource { .init(name: "books_pages_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `fav_image_placeholder`.
    var fav_image_placeholder: RswiftResources.ImageResource { .init(name: "fav_image_placeholder", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `genre_adventures`.
    var genre_adventures: RswiftResources.ImageResource { .init(name: "genre_adventures", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `genre_children`.
    var genre_children: RswiftResources.ImageResource { .init(name: "genre_children", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `genre_classic`.
    var genre_classic: RswiftResources.ImageResource { .init(name: "genre_classic", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `genre_detectives`.
    var genre_detectives: RswiftResources.ImageResource { .init(name: "genre_detectives", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `genre_esotericism`.
    var genre_esotericism: RswiftResources.ImageResource { .init(name: "genre_esotericism", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `genre_fantasy`.
    var genre_fantasy: RswiftResources.ImageResource { .init(name: "genre_fantasy", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `genre_historical`.
    var genre_historical: RswiftResources.ImageResource { .init(name: "genre_historical", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `genre_horrors`.
    var genre_horrors: RswiftResources.ImageResource { .init(name: "genre_horrors", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `genre_psychology`.
    var genre_psychology: RswiftResources.ImageResource { .init(name: "genre_psychology", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `genre_religion`.
    var genre_religion: RswiftResources.ImageResource { .init(name: "genre_religion", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `genre_romance`.
    var genre_romance: RswiftResources.ImageResource { .init(name: "genre_romance", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `genre_thriller`.
    var genre_thriller: RswiftResources.ImageResource { .init(name: "genre_thriller", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `launch_background`.
    var launch_background: RswiftResources.ImageResource { .init(name: "launch_background", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `launch_main_image`.
    var launch_main_image: RswiftResources.ImageResource { .init(name: "launch_main_image", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `launch_profile_placeholder`.
    var launch_profile_placeholder: RswiftResources.ImageResource { .init(name: "launch_profile_placeholder", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `onb_name_image`.
    var onb_name_image: RswiftResources.ImageResource { .init(name: "onb_name_image", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `profile_arrow`.
    var profile_arrow: RswiftResources.ImageResource { .init(name: "profile_arrow", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `profile_edit_button`.
    var profile_edit_button: RswiftResources.ImageResource { .init(name: "profile_edit_button", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `profile_policy_icon`.
    var profile_policy_icon: RswiftResources.ImageResource { .init(name: "profile_policy_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `profile_rate_icon`.
    var profile_rate_icon: RswiftResources.ImageResource { .init(name: "profile_rate_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `profile_share_icon`.
    var profile_share_icon: RswiftResources.ImageResource { .init(name: "profile_share_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `selected_icon`.
    var selected_icon: RswiftResources.ImageResource { .init(name: "selected_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `statistics_author_icon`.
    var statistics_author_icon: RswiftResources.ImageResource { .init(name: "statistics_author_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `statistics_genre_icon`.
    var statistics_genre_icon: RswiftResources.ImageResource { .init(name: "statistics_genre_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `statistics_language_icon`.
    var statistics_language_icon: RswiftResources.ImageResource { .init(name: "statistics_language_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `statistics_reading_icon`.
    var statistics_reading_icon: RswiftResources.ImageResource { .init(name: "statistics_reading_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `statistics_time_icon`.
    var statistics_time_icon: RswiftResources.ImageResource { .init(name: "statistics_time_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.info` struct is generated, and contains static references to 1 properties.
  struct info {
    let bundle: Foundation.Bundle
    var uiApplicationSceneManifest: uiApplicationSceneManifest { .init(bundle: bundle) }

    func uiApplicationSceneManifest(bundle: Foundation.Bundle) -> uiApplicationSceneManifest {
      .init(bundle: bundle)
    }

    struct uiApplicationSceneManifest {
      let bundle: Foundation.Bundle

      let uiApplicationSupportsMultipleScenes: Bool = false

      var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest"], key: "_key") ?? "UIApplicationSceneManifest" }
      var uiSceneConfigurations: uiSceneConfigurations { .init(bundle: bundle) }

      func uiSceneConfigurations(bundle: Foundation.Bundle) -> uiSceneConfigurations {
        .init(bundle: bundle)
      }

      struct uiSceneConfigurations {
        let bundle: Foundation.Bundle
        var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations"], key: "_key") ?? "UISceneConfigurations" }
        var uiWindowSceneSessionRoleApplication: uiWindowSceneSessionRoleApplication { .init(bundle: bundle) }

        func uiWindowSceneSessionRoleApplication(bundle: Foundation.Bundle) -> uiWindowSceneSessionRoleApplication {
          .init(bundle: bundle)
        }

        struct uiWindowSceneSessionRoleApplication {
          let bundle: Foundation.Bundle
          var defaultConfiguration: defaultConfiguration { .init(bundle: bundle) }

          func defaultConfiguration(bundle: Foundation.Bundle) -> defaultConfiguration {
            .init(bundle: bundle)
          }

          struct defaultConfiguration {
            let bundle: Foundation.Bundle
            var uiSceneConfigurationName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneConfigurationName") ?? "Default Configuration" }
            var uiSceneDelegateClassName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneDelegateClassName") ?? "$(PRODUCT_MODULE_NAME).SceneDelegate" }
          }
        }
      }
    }
  }
}